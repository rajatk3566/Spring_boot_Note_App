name: Spring Boot CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    services:
      postgres-build:
        image: mysql
        env:
          MYSQL_DATABASE: NoteDatabase
          MYSQL_ROOT_PASSWORD: Rajat@123
        ports:
          - 3306:3306
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/NoteDatabase
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: Rajat@123
    
    # - name: Build Docker image
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     push: false
    #     tags: saini-ayush/event-spring:latest
    
    # - name: Stop mysql service
    #   run: |
    #     # Find and stop the PostgreSQL container used during build
    #     docker ps -a
    #     MYSQL_CONTAINER=$(docker ps -q --filter "ancestor=mysql")
    #     if [ ! -z "$" ]; then
    #       docker stop $POSTGRES_CONTAINER
    #       docker rm $POSTGRES_CONTAINER
    #     fi
    #     # Wait to ensure the port is released
    #     sleep 10
    
    # - name: Test with Docker Compose
    #   run: |
        
    #     docker compose up -d
        
    #     sleep 30
        
    #     docker compose down









